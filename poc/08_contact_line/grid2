#!/bin/sh

me=grid
msg () { echo >&2 "$@" ; }
err () { msg "$me: $@"; exit 2 ; }

usg () {
    cat <<!
$me -r ratio -p degree > vtk
!
exit 2
}

Aflag=0
while test $# -ne 0
do case "$1" in
       -h) usg ;;
       -a) shift
           if test $# -eq 0; then err '-r needs an argument'; fi
           a=$1; shift; Aflag=1 ;;
       *) err "unknown argument '$1'" ;;
   esac
done

if test $Aflag -eq 0; then err '-a is not set'; fi

tmp=/tmp/grid.$$
trap 'rm -f $tmp; exit 2' 1 2 3 14 15

awk -v a="$a" -v tmp=$tmp '
BEGIN {
    ox = -0.5
    oy = 0
    sx = 0.005
    sy = 0.005
    nx = 200
    ny = 100
    cmd = "./corner -a %.16g > " tmp
    cmd = sprintf(cmd, a)
    for (j = 0; j < ny; j++)
        for (i = 0; i < nx; i++) {
            x = ox + sx * i
            y = oy + sy * j
            print x, y | cmd
        }
    close(cmd)
    i = 0
    while ((getline < tmp) == 1) {
        vx[i] = $1
        vy[i] = $2
        pressure[i] = $3
        psi[i] = $4
	mask[i] = $5
        i++
    }
    print "# vtk DataFile Version 2.0"
    print "generated by aphros"
    print "ASCII"
    print "DATASET STRUCTURED_POINTS"
    printf "DIMENSIONS %d %d 1\n", nx, ny
    printf "ORIGIN %.16g %.16g 0\n", ox, oy
    printf "SPACING %.16g %.16g 0\n", sx, sy
    printf "POINT_DATA %d\n", nx * ny
    print "VECTORS v double"
    for (i = 0; i < nx * ny; i++)
        print vx[i], vy[i], 0
    print "SCALARS psi double"
    print "LOOKUP_TABLE default"
    for (i = 0; i < nx * ny; i++)
        print psi[i]
    print "SCALARS pressure double"
    print "LOOKUP_TABLE default"
    for (i = 0; i < nx * ny; i++)
        print pressure[i]
    print "SCALARS mask int"
    print "LOOKUP_TABLE default"
    for (i = 0; i < nx * ny; i++)
        print mask[i]
}
'

rm -f $tmp
