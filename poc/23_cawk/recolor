#/bin/sh

me=recolor
eps=0.01041666666666667
frq=0.01
rmax=0.5

ch.cawk -v me="$me" -v eps=$eps -v frq=$frq -v rmax=$rmax '
function same0(dx, dv,   s) {
    s = (dv > -eps) && dv < frq && dx < 0.05
    return s
}
FNR == 2 {
    file ++
}

{
    x[file, $cl] = $x
    y[file, $cl] = $y
    z[file, $cl] = $z
    r[file, $cl] = $r
    vf[file, $cl] = $vf
}

$r < eps  || $r > rmax {
    if (file == 1)
        skip1[$cl]
    else
        skip2[$cl]
    next
}

file == 1 {
    one[$cl]
}

file == 2 {
    two[$cl]
}

END {
    for (i in two)
        if (!(i in one))
            new[i]

    for (i in one)
        if (!(i in two))
            dead[i]

    for (i in one)
        if (i in two)
            old[i]

    for (i in old) {
        nold++
        if (!same(i, i)) {
            Nwrong++
            delete old[i]
            dead[i]
            new[i]
        }
    }

    for (i in dead)
        for (j in new)
            if (same(i, j)) {
                map[j] = i
                delete dead[i]
                delete new[j]
                break
            }

    #msg("old : %d", nelem(old))
    #msg("map : %d", nelem(map))    
    msg("new : %d", nelem(new))
    msg("dead : %d", nelem(dead))
    msg("wrong: %d", Nwrong)
    msg("nelem(map): %d", nelem(map))
    vdead = volume(dead, 1)
    vnew = volume(new, 2)
    msg("volume(old): %g %g", volume(old, 1), volume(old, 2))
    msg("volume(new, dead): %g %g", vnew, vdead)
    msg("%.2f%%", 100*rdiff(vnew, vdead))

    msg("skip: %d %d", nelem(skip1), nelem(skip2))
    msg("skip: %g", volume(skip1, 1) - volume(skip2, 2))
}

function same(i, j,   dx, dv) {
    dx  = vabs(x[1, i],y[1, i],z[1, i],x[2, j],y[2, j],z[2, j])
    dv = rdiff(vf[1, i], vf[2, j])
    return same0(dx, dv)
}

function vabs(x, y, z, u, v, w) {
    x -= u
    y -= v
    z -= w
    return sqrt(x^2 + y^2 + z^2)
}

function rdiff(a, b,   d) {
    d = max(a, b)
    return d == 0 ? 0 : (a - b)/d;
}

function abs(a) {
    return a > 0 ? a : -a
}

function max(a, b) {
    return a > b ? a : b
}

function msg(a, b, c, d, e) {
    printf "%s: " a "\\n", me, b, c, d, e, f | "cat >&2"
}

function nelem(a, i, cnt)
{
    for (i in a)
        cnt++
    return cnt + 0
}

function volume(a, file,   i, v)
{
    for (i in a) {
        v += vf[file, i]
    }
    return v + 0
}

' "$@"
