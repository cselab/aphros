#!/usr/bin/env python

import h5py
import sys
import numpy as np
import os
import ch.coal

X, Y, Z = 2, 1, 0
me = "ch.coal"

def err(s):
	sys.stderr.write("%s: %s\n" % (me, s))
	sys.exit(2)

def read_field(path):	
	f = "data"
	try:
		with h5py.File(path, 'r') as h:
			u = h[f]
			u = np.array(u)
			u = np.squeeze(u)
	except IOError:
		err("not an hdf file %s" % path)
	except KeyError:
		err("no field %s in file %s" % (f, path))
	return u

def w_index(u, D):
	C = dict()
	C[X] = (Y, Z); C[Y] = (X, Z); C[Z] = (X, Y)
	n = u.shape[D]
	i = range(n)
	v = np.average(u, C[D])
	s = np.sum(v)
	d = np.dot(v, i)
	if s <= 0: err("s <= 0")
	if d <= 0: err("d <= 0")		
	return d/s

def read_sym(path):
	u = read_field(path)
	if Sym:
		nz, ny, nz = u.shape
		u = u[:, :ny//2, :]
		u = u[:, :, :nx//2]
	return u

def write_field(path, u):
	nz, ny, nx = u.shape
	u = u.reshape(nz, ny, nx, 1)
	with h5py.File(path, 'w') as h:
		dset = h.create_dataset("data", data=u)

def arg():
	ans = [ ]
	argv = sys.argv
	argv.pop(0)
	a = []
	while True:
		if argv == [ ]:
			ans.append(a)
			break
		i = argv.pop(0)
		if i == '--':
			ans.append(a)
			a = []
		else:
			a.append(i)
	return tuple(ans)

def assert_file(a):
	for i in a:
		if not os.path.isfile(i):
			err("not a file %s" % i)

Sym = False
t = arg()
if len(t) != 2:
	err("wrong argument list")
vv, uu = t
assert_file(vv)
assert_file(uu)

cnt = 0
for v, f in zip(vv, uu):
	u = read_sym(v)
	zc = int(w_index(u, Z))
	print(zc)
	u = read_sym(f)
	nz, ny, nx = u.shape
	a = np.zeros_like(u)
	i = np.array(range(nz))
	j = i - zc + nz//2
	mask =  np.logical_and(0 <= j,  j < nz)
	i = i[mask]
	j = j[mask]
	a[j] = u[i]
	hdf = "%05d.h5" % cnt
	xmf = "%05d.xmf" % cnt
	write_field(hdf, a)
	ch.coal.xmf(xmf, hdf, "vx", nx, ny, nz, ncc = 1)
	cnt += 1

