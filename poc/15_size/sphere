#!/usr/bin/awk -f

BEGIN {
    n = nv = nt = 0
    me = "sphere"
    read_template()
}

{
        if (!(NF >= 4))
            msg("expecting NF >= 4, got \"%s\"", $0)
        sx[n] = $1; sy[n] = $2; sz[n] = $3; sr[n] = $4
        n++
}

END {
    if (ERR)
        exit(ERR)
    for (i = 0; i < n; i++) {
        sphere(sx[i], sy[i], sz[i], sr[i])
    }
    write()
}

function sphere(x0, y0, z0, r0,    i)
{
    for (i = 0; i < it; i++) {
        t0[nt] = it0[i] + nv
        t1[nt] = it1[i] + nv
        t2[nt] = it2[i] + nv
        nt ++
    }
    
    for (i = 0; i < iv; i++) {
        x[nv] = r0*ix[i] + x0
        y[nv] = r0*iy[i] + y0
        z[nv] = r0*iz[i] + z0
        nv ++
    }
}

function msg(fmt, a, b, c, d)
{
        printf "%s: " fmt "\n", me, a, b, c, d | "cat >&2"
}

function err(fmt, a, b, c, d)
{
        msg(fmt, a, b, c, d)
        exit(ERR = 2)
}

# set ix, iy, iz, iv, it, it
function read_template(   i, l, f, r)
{
    f = "icosa.off"
    r = getline < f
    if (r <= 0 || !eq($0, "OFF"))
        err("not an off file \"%s\"", f)
    r = getline < f
    iv = $1; it = $2
    for (i = 0; i < iv; i++) {
        getline < f
        ix[i] = $1
        iy[i] = $2
        iz[i] = $3
    }
    for (i = 0; i < it; i++) {
        getline < f        
        it0[i] = $2
        it1[i] = $3
        it2[i] = $4
    }
}

function eq(a, b)
{
    return "" a == "" b
}

function write(   i)
{
    print "OFF"
    print nv, nt, 0
    for (i = 0; i < nv; i++)
        print x[i], y[i], z[i]
    for (i = 0; i < nt; i++)
        print 3, t0[i], t1[i], t2[i]
}
