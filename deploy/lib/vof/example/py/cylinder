#!/usr/bin/env python3

import sys
from vof import cylinder

def err(s):
    sys.stderr.write("%s: %s\n" % (me, s))
    sys.exit(2)

def wrap(x):
    if x > 0.5:
        return wrap(x - 1)
    elif x < -0.5:
        return wrap(x + 1)
    else:
        return x

def sample_spherical(n):
    dim = 3
    r = np.random.randn(dim, n)
    r /= np.linalg.norm(r, axis=0)
    return r

# cx,cy,cz = 0.1, 0.4456, 0.5
def cy(cx, cy, cz, R, u, v, w, inv):
    X, Y, Z = 0, 1, 2
    center = cx,cy,cz
    center = [wrap(x) for x in center]
    r =  int(2*(R + 1))
    for i in range(-r, r + 1):
        for j in range(-r, r + 1):
            for k in range(-r, r + 1):
                x = center[X] - i
                y = center[Y] - j
                z = center[Z] - k
                o = cylinder(x, y, z, R, u, v, w)
                if o > 0 and o < 1:
                    print("%.16g %.16g %.16g %.16g %d" % (x, y, z, R, inv))
me = "cylinder"
argv = sys.argv
argv.pop(0)

if "-h" in argv:
    sys.stderr.write("usage: %s\n" % me)
    sys.stderr.write("usage: %s -i\n" % me)
    sys.exit(2)

if "-i" in argv:
    Inv = True
    argv.remove("-i")
else:
    Inv = False

if len(argv) > 0: err("too many arguments")

for l in sys.stdin.readlines():
    x, y, z, r, u, v, w = map(float, l.split())
    inv = 1 if Inv else 0
    cy(x, y, z, r, u, v, w, inv)
