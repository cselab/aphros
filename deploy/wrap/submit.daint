#!/bin/bash

# Submit job found as ch.job in PATH,
# read number of tasts from np
# read time limit in minutes from tl

set -eu

if [ -f job.id ]; then
  echo "Abort, job.id exists"
  exit 1
fi

ch.writearg "$@"

: ${JOB=ch.job}
job="`type -p $JOB`"

np=`cat np`
tl=`cat tl`
nth=${OMP_NUM_THREADS:-1}

if (( $np % $nth != 0 )) ; then
  echo "Abort, np=$np must be divisible by OMP_NUM_THREADS=$nth"
  exit 1
fi

name="$(basename $(pwd))"

extra=

if [[ "$nth" == 1 ]] ; then
  :
elif [[ "$nth" == 12 ]] ; then
  extra="--ntasks-per-node '$nth'"
elif [[ "$nth" == 24 ]] ; then
  extra="--ntasks-per-node '$nth' --ntasks-per-core 2"
else
  echo "Abort, got OMP_NUM_THREADS=$nth, expected 1, 12 or 24"
  exit 1
fi

: ${A=s931}
cmd="sbatch -J '$name' -C gpu -A '$A' -n '$np' -t '$tl' $extra $job"
echo $cmd

msg=`eval $cmd`
echo "$msg"

id=`echo "$msg" | sed -e "s/[^0-9]*\([0-9]*\)[^0-9]*/\1/"`
echo "Write $id to job.id"
echo $id > job.id

echo "pending" > job.status
