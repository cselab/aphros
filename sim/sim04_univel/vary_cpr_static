#!/usr/bin/env python

import os
import itertools as it
import numpy
import sys
from glob import glob

import ch

sh = ch.sh

a = ch.GetStdPar('out', 'La', 'tmax', 'symmcorn', 'dumpdefault', 'bcoh', 'dim',
        'nfr', 'np', 'nx', 'chsm')
a['La'][0] = 1200.
a['tmax'][0] = 1.
a['symmcorn'][0] = 1
a['cpr0'] = [-1., "cpr range left"]
a['cpr1'] = [5.1, "cpr range right"]
a['cprs'] = [0.25, "cpr range step"]
a['dim'][0] = 2
a['np'][0] = 1
a['nfr'][0] = 5
a['nx'][0] = 128
a['dummy'] = ["", "dummy directory"]
a['ch'] = [1, "enable ch"]
c = ch.GetArgs(a)
assert c.out is not None
o = os.path.realpath(c.out)
sh("mkdir -p '{:}'".format(o))

r0,r1,rs = (c.cpr0, c.cpr1, c.cprs)

args = sys.argv[0]
args += ' ' + ' '.join(sys.argv[1:])

dummy = c.dummy if c.dummy else __file__

for dim,cpr in it.product([c.dim], 1. * 2 ** numpy.arange(r0,r1,rs)):
    nxm = ch.GetBs(dim)
    La = c.La
    tmax = c.tmax
    symmcorn = c.symmcorn
    bcoh = " ".join(map(str, c.bcoh))
    cprk = 1.2 if c.symmcorn else 2.4;
    #nx = max(nxm, ch.Upper2(cpr * cprk)) 
    nx = c.nx
    np = c.np
    nfr = c.nfr
    dumpdefault = c.dumpdefault
    chsm = c.chsm

    chrun = "" if c.ch else "echo > r_ch"

    sy = "_symm" if c.symmcorn else ""
    sf = "dim{:}_cpr{:06.02f}_la{:06.01f}{:}".format(dim, cpr, La, sy)
    ot = os.path.join(o, "run_{:}".format(sf))
    od = os.path.join(o, "dat_{:}".format(sf))

    bcod = "-bcod -0.5 -0.5 -0.5" if c.symmcorn else ""

    cf = '''

# {args}

rm -f ch/done ge/done

{chrun}

./gen -nx {nx} -cpr {cpr} -La {La} {bcod} -symmcorn {symmcorn} \
-bcoh {bcoh} -np {np} -nfr {nfr} -chsm {chsm} \
-dim {dim} -We 0 -tmax {tmax} -mode mu -pos center \
-dumpdefault {dumpdefault}

echo "set int statvel 1
set int list_ls 2
set string dumplist vf
set int min_iter 3
" > ch/add.conf
'''.format(**locals())

    sh("ch.task {:} {:} > {:} <<< '{:}'".format(dummy, od, ot, cf))
    sh("chmod +x {:}".format(ot))
