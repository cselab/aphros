#!/usr/bin/env python

import os
import itertools as it
import numpy as np
from glob import glob

import ch

sh = ch.sh

a = ch.GetStdPar('out', 'La', 'tmax', 'symmcorn', 'dumpdefault', 'bcoh', 'dim')
a['La'][0] = 1200.
a['tmax'][0] = 1.
a['symmcorn'][0] = 1
a['cpr0'] = [0, "cpr range left"]
a['cpr1'] = [5, "cpr range right"]
a['cprs'] = [0.5, "cpr range step"]
a['dim'][0] = 2
c = ch.GetArgs(a)
assert c.out is not None
o = os.path.realpath(c.out)
sh("mkdir -p '{:}'".format(o))

r0,r1,rs = (c.cpr0, c.cpr1, c.cprs)

for dim,cpr in it.product([c.dim], 1.25 * 2 ** np.arange(r0,r1,rs)):
    nxm = ch.GetBs(dim)
    La = c.La
    tmax = c.tmax
    symmcorn = c.symmcorn
    bcoh = " ".join(map(str, c.bcoh))
    cprk = 1.2 if c.symmcorn else 2.4;
    nx = max(nxm, ch.Upper2(cpr * cprk)) 
    dumpdefault = c.dumpdefault

    sy = "_symm" if c.symmcorn else ""
    sf = "dim{:}_cpr{:06.02f}_la{:06.01f}{:}".format(dim, cpr, La, sy)
    ot = os.path.join(o, "run_{:}".format(sf))
    od = os.path.join(o, "dat_{:}".format(sf))

    bcod = "-bcod -0.5 -0.5 -0.5" if c.symmcorn else ""

    cf = '''
rm -f ch/done ge/done
./gen -nx {nx} -cpr {cpr} -La {La} {bcod} -symmcorn {symmcorn} \
-bcoh {bcoh} \
-dim {dim} -We 0 -tmax {tmax} -mode mu -pos center \
-dumpdefault {dumpdefault}'''.format(**locals())

    sh("ch.task {:} > {:} <<< '{:}'".format(od, ot, cf))
    sh("chmod +x {:}".format(ot))
