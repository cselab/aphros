Define AVG(T,v0,v1) (v0 + CLAMP(T,0,1)*(v1-v0))
Define RHO(T) (AVG(T,RHO1,RHO2))
Define MU(T) (AVG(T,MU1,MU2))

# [D2 ] Replaced with '' for 2D, else '#'
# [D3 ] Replaced with '' for 3D, else '#'
# [WX ] Replaced with '' for wall in x, else '#'
# [PX ] Replaced with '' for periodic in x, else '#'
# [BCX ] Replaced with bondary conditions in x
# [EDGEX ] Replaced with connectivity in x

1 [NUMEDGE] GfsSimulation GfsBox GfsGEdge {} {
  Global {
    Include ini_t_bub.h
  }

  Time { end = TMAX } 

  Refine REFINE

  [D2]VariableTracerVOFHeight T
  [D3]VariableCurvature K T 

  [D2]InitFraction T (ini_t2(x+0.5, y+0.5))
  [D3]InitFraction T (ini_t(x+0.5, y+0.5, z+0.5))

  VariableCurvature K T 
  SourceTension T SIGMA K

  VariableFiltered TS T GESM
  PhysicalParams { alpha = (1./RHO(TS)) }
  SourceViscosity (MU(TS))

  [D2]Init {} { U = VELX V = VELY }
  [D3]Init {} { U = VELX V = VELY W = VELZ }

  [D2]OutputSimulation { step = DUMPDT } o/%d/u_%04ld.vtk { variables = T,P,U,V format = VTK}
  [D3]OutputSimulation { step = DUMPDT } o/%d/u_%04ld.vtk { variables = T,P,U,V,W format = VTK}
  OutputTime { istep = 10 } stderr
}
GfsBox {
  [BCX]
  [BCY]
  [BCZ]
}
[EDGEX]
[EDGEY]
[EDGEZ]
