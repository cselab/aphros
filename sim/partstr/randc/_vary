#!/usr/bin/env python

# Vary bubble position and radius.
# $1: solver name (ch, ba)

import numpy as np
import os
import sys

def sh(s, fatal=True, silent=True):
    if not silent:
        print(s)
    r = os.system(s)
    assert not fatal or r == 0

bb = np.loadtxt('bb')

nx = 32
hx = 1. / nx

av = sys.argv
s = av[1] if len(av) > 2 else 'all'

assert s in ['ba', 'ch', 'all']

ss = ['ba', 'ch'] if s == 'all' else [s]

sh("mkdir -p {}".format(s))

log = "log"

for s in ss:
    for ri,re in enumerate(np.linspace(-1, 4, 20)):
        r = hx * 2. ** re
        for bi,bc in enumerate(bb):
            with open("b.dat", 'w') as f :
                f.write("{:} {:} {:} {:}".format(bc[0], bc[1], bc[2], r))
            print("ri={:}, bi={:}".format(ri, bi))
            ok = "{:}/kr{:03d}b{:03d}.dat".format(s, ri, bi)
            ovf = "{:}/vfr{:03d}b{:03d}.dat".format(s, ri, bi)
            if os.path.isfile(ok) and os.path.isfile(ovf):
                print("Skip existing {:}".format(ok))
                continue
            sh("(cd {s} ; ./run) &>> {log}; mv {s}/ok {ok} ; mv {s}/ovf {ovf}"
                    .format(**locals()))

