#!/usr/bin/env python

def Exp():
    # SI units

    sig = 72e-3 # surface tension
    g = 9.8
    # water
    rho = 1000 # density
    mu = 1e-3  # dynamic viscosity
    nu = mu / rho # kinematic viscosity

    U = 0.5   # characteristic velocity
    H = 0.25   # domain height

    ###
    Re = U * H / nu
    Fr = (U ** 2 / (g * H)) ** 0.5
    We = rho * U ** 2 * H / sig

    for key in sorted(locals()):
        print("{:} \t=\t {:}".format(key, locals()[key]))
    print("\n")

    return locals()

def Sim(c):
    Re,We,Fr = (c['Re'], c['We'], c['Fr'])

    # domain 
    lx = 2
    ly = 1
    lz = 1.
    lys = 0.5 # position of free surface
    lmax = max([lx, ly, lz])

    U = 1. # velocity
    H = 1

    # time
    tun = H / U  # unit
    # time unit in Exp() SI units
    tun_phys = c['H'] / c['U']

    tmax = tun * 500.
    dumpdt = tun * 0.1

    # liquid
    rho0 = 1. # density
    mu0 = U * H / Re  # viscosity

    sig = (rho0 * U ** 2 * H) / We
    g = U ** 2 / Fr ** 2 / H

    # gas, ratio to liquid
    mu = 0.01
    rho = 0.01

    def rnd(a): return int(a + 0.5)

    # mesh
    nn = 96
    nx = rnd(nn * lx)
    ny = rnd(nn * ly)
    nz = rnd(nn * lz)

    # block size
    bs = 16
    bsz = bs
    # cores
    np = 216
    # time limit in minutes
    tl = 1440

    for key in sorted(locals()):
        print("{:} \t=\t {:}".format(key, locals()[key]))
    print("\n")

    return locals()

def Gen(c):
    lx = c['lx']
    ly = c['ly']
    lz = c['lz']
    lys = c['lys']
    lmax = c['lmax']
    # bubble 
    bx = lx * 0.5
    by = ly
    bz = lz * 0.5
    brx = 1e10
    bry = ly - lys
    brz = brx

    tmax = c['tmax']
    dumpdt = c['dumpdt']

    rho1 = c['rho0']
    mu1 = c['mu0']
    rho2 = rho1 * c['rho']
    mu2 = mu1 * c['mu']
    sig = c['sig']

    g = -c['g']
    gx = 0

    vel = c['U']

    eps = 1e-5

    inx0 = -eps
    inx1 = +eps
    iny0 = 0
    iny1 = lys
    iny2 = ly

    outx0 = lx - eps
    outx1 = lx + eps
    outy0 = 0
    outy1 = lys
    outy2 = ly

    with open("par.conf", 'w') as f:
        f.write('''\
# domain
set double extent {lmax}

# time
set double tmax {tmax}
set double dump_field_dt {dumpdt}
set double dump_part_dt {dumpdt}
set double dump_traj_dt {dumpdt}

set vect vel {vel} 0 0

# physical
set double rho1 {rho1}
set double rho2 {rho2}
set double mu1 {mu1}
set double mu2 {mu2}
set double sigma {sig}
set vect gravity {gx} {g} 0

set string box0 inlet {vel} 0 0
set vect box0_a {inx0} {iny0} -1e5
set vect box0_b {inx1} {iny1} 1e5

set string box1 outlet
set vect box1_a {outx0} {outy0} -1e5
set vect box1_b {outx1} {outy1} 1e5

set string box2 inlet {vel} 0 0 , halo fill , fill_vf 1
set vect box2_a {inx0} {iny1} -1e5
set vect box2_b {inx1} {iny2} 1e5

set string box3 outlet
set vect box3_a {outx0} {outy1} -1e5
set vect box3_b {outx1} {outy2} 1e5

'''.format(**locals()))


    with open("b.dat", 'w') as f:
        f.write("{bx} {by} {bz} {brx} {bry} {brz}\n".format(**locals()))

    with open("par.make", 'w') as f:
        f.write(
'''m = {nx} {ny} {nz}
bs = {bs} {bs} {bsz}
np = {np}
tl = {tl}
'''.format(**c))


c = Exp()
c = Sim(c)
Gen(c)
