#!/usr/bin/env python3

import numpy as np

def P(v):
    return np.array(v)

# f: face index, 0..5
# i: bc index, >=0
def Face(f, i, box, bcstr):
    box = np.copy(box)
    assert f in range(6)
    d = f // 2   # direction
    q = f % 2    # face in given direction 0,1
    c = 0.5 * (box[0] + box[1])   # box center
    a = box[0]
    b = box[1]
    a[d] = box[q][d]
    b[d] = c[d]
    return '''
set string face{i} {bcstr}
set vect   face{i}_a {a[0]} {a[1]} {a[2]}
set vect   face{i}_b {b[0]} {b[1]} {b[2]}
set int    face{i}_dir {d}
'''.format(**locals())

def CellBox(i, box):
    a = box[0]
    b = box[1]
    return '''
set string cellbox{i}
set vect cellbox{i}_a {a[0]} {a[1]} {a[2]}
set vect cellbox{i}_b {b[0]} {b[1]} {b[2]}
'''.format(**locals())



out = ""
h = 0.15
xc = 0.7
box = [P([xc-h, 0.1, 0.5-h]), P([xc+h, 0.9, 0.5+h])]
bcstr = "wall 0 0 0  , fill_vf 0"
i = 0
for f in range(6):
    out += Face(f, i, box, bcstr)
    i += 1

out += CellBox(0, box)

fn = "bc.conf"
print(fn)
print(out)
with open(fn, 'w') as fout:
    fout.write(out)
