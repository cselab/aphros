#!/usr/bin/env python

# Reh: Reynolds number by channel height and average velocity
def Exp():
    # SI units

    sig = 73e-3 # surface tension
    g = 9.8

    # water
    rho = 1000 # density
    mu = 1e-2  # dynamic viscosity

    r = 0.005   # drop radius
    h = 4 * r   # distance between bubble center and free surface

    ###
    Oh = mu / (rho * sig * r) ** 0.5
    Eo = rho * g * r ** 2 / sig
    hr = h / r

    for key in sorted(locals()):
        print("{:} \t=\t {:}".format(key, locals()[key]))
    print("\n")

    return locals()

def Sim(c):
    Oh,Eo,hr = (c['Oh'], c['Eo'], c['hr'])

    # domain 
    W = 1. # width
    H = 1. # height
    assert H >= W

    g = 1.
    rho0 = 1
    r = W * 0.1
    sig = rho0 * g * r ** 2 / Eo
    mu0 = Oh * (sig * rho0 * r) ** 0.5
    h = hr * r

    # time
    tun = (h / g) ** 0.5  # unit
    tmax = tun * 2
    dumpdt = tun * 0.01
    trepdt = dumpdt * 10

    # gas, ratio to liquid
    mu = 0.01
    rho = 0.01

    # mesh
    nx = 256
    #nx = 128
    ny = nx
    nz = int(nx * H / W + 0.5)

    # block size
    bs = 16
    # cores
    np = 512
    # time limit (minutes)
    tl = 240

    for key in sorted(locals()):
        print("{:} \t=\t {:}".format(key, locals()[key]))
    print("\n")

    return locals()

def Gen(c):
    W = c['W']
    H = c['H']
    # free surface
    sx = W * 0.5
    sy = W * 0.5
    sz = 0 
    srx = 1e10
    sry = srx
    srz = H * 0.4 + 1e-5

    tmax = c['tmax']
    dumpdt = c['dumpdt']
    trepdt = c['trepdt']

    rho2 = c['rho0']
    mu2 = c['mu0']
    rho1 = rho2 * c['rho']
    mu1 = mu2 * c['mu']
    sig = c['sig']
    
    g = -c['g']

    # droplet
    bx = W * 0.5 + 0.01
    by = W * 0.5 + 0.02
    bz = srz + c['h']
    br = c['r']

    # init vel box
    bax =  bx - br
    bay =  by - br
    baz =  bz - br
    bbx =  bx + br
    bby =  by + br
    bbz =  bz + br

    with open("par.conf", 'w') as f:
        f.write('''\
# domain
set double extent {H}

# time
set double tmax {tmax}
set double dump_field_dt {dumpdt}
set double dump_part_dt {dumpdt}
set double dump_trep_dt {trepdt}

# physical 
set double rho1 {rho1}
set double rho2 {rho2}
set double mu1 {mu1}
set double mu2 {mu2}
set double sigma {sig}
set vect gravity 0 0 {g}

set double dtmax 1e-4
setnext string ev 30e-4 set double dtmax 3e-3

set string vel_init box
set vect vel 0 0 -3
set vect vel_box_a {bax} {bay} {baz}
set vect vel_box_b {bbx} {bby} {bbz}

        '''.format(**locals()))

    with open("b.dat", 'w') as f:
        f.write("{bx} {by} {bz} {br} {br} {br}\n".format(**locals()))
        f.write("{sx} {sy} {sz} {srx} {sry} {srz}\n".format(**locals()))
    with open("_m", 'w') as f:
        f.write("{nx} {ny} {nz}".format(**c))
    with open("_bs", 'w') as f:
        f.write("{bs} {bs} {bs}".format(**c))
    with open("_np", 'w') as f:
        f.write("{np}".format(**c))
    with open("_tl", 'w') as f:
        f.write("{tl}".format(**c))



c = Exp()
c = Sim(c)
Gen(c)
