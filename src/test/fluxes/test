#!/usr/bin/env python3

import os
import numpy as np
import aphros
from aphros.io import ReadPlain


class Test(aphros.TestBase):
    def __init__(self):
        cases = [
            "proj_exp_gravity",
            "proj_imp_gravity",
            "simple_exp_gravity",
            "simple_imp_gravity",
            "proj_imp_pressure",
        ]
        super().__init__(cases=cases)

    def run(self, case):
        def Slice(fin, fout, midy=False):
          u = ReadPlain(fin)
          ly = 1.
          ny = u.shape[1]
          hy = ly / ny
          if midy:
            u = u[0, ny // 2, :]
          else:
            u = u[0, :, -1]
          x = np.linspace(hy * 0.5, ly - hy * 0.5, ny)
          np.savetxt(fout, np.transpose((x, u)))

        self.runcmd("make -f sim.makefile cleanall")
        with open("add.conf", 'w') as f:
            for conf in case.split('_'):
                f.write("include {}.conf\n".format(conf))
        self.runcmd("make -f sim.makefile run")

        Slice('vx_0000.dat', 'vx', False)
        Slice('p_0000.dat', 'p', True)

        return ['vx', 'p']

    def check(self, outdir, refdir, output_files):
        for f in output_files:
            ref = os.path.join(refdir, f)
            out = os.path.join(outdir, f)
            self.runcmd("ap.diffnum '{}' '{}' 1e-9".format(ref, out))
        return True


Test().main()

