set(T "report")
add_object(${T} report.cpp)
object_link_libraries(${T})

set(T "distr")
add_object(${T} distr.cpp)
object_link_libraries(${T}
    sysinfo report parser suspender vars histogram dumper git subcomm
    dump_xmf dump_raw PRIVATE use_dims openmp)

set(T "distr_particles")
add_object(${T} distr_particles.cpp)
object_link_libraries(${T} use_dims use_mpi)

if (USE_BACKEND_LOCAL)
  set(T "local")
  add_object(${T} local.cpp)
  object_link_libraries(${T} distr use_dims)
endif()

if (USE_BACKEND_CUBISM)
  set(T "cubismnc")
  add_object(${T} cubismnc.cpp)
  object_link_libraries(${T} distr distr_particles use_mpi use_hdf PRIVATE openmp)
  object_compile_definitions(${T} PRIVATE _ALIGNBYTES_=16)
  if (USE_WARNINGS)
    object_compile_options(${T} PRIVATE -Wall -Wextra -pedantic -Wno-shadow)
  endif()
  if (USE_HDF)
    object_link_libraries(${T} hdf)
  endif()
  if (USE_FPZIP)
    object_link_libraries(${T} fpzip)
  endif ()
  object_compile_definitions(${T} PRIVATE _USE_FPZIP_=$<BOOL:${USE_FPZIP}>)
endif()

if (USE_BACKEND_NATIVE)
  set(T "native")
  add_object(${T} native.cpp)
  object_link_libraries(${T} distr distr_particles dump_raw dump_xmf use_dims)

  set(T "comm_manager")
  add_object(${T} comm_manager.cpp)
  object_link_libraries(${T} distr use_mpi)
endif()

set(T "distrsolver")
add_object(${T} distrsolver.cpp)
object_link_libraries(${T} distr utildistr utilmpi argparse use_backend)
if (USE_BACKEND_CUBISM)
  object_link_libraries(${T} cubismnc)
endif()
if (USE_BACKEND_LOCAL)
  object_link_libraries(${T} local)
endif()
if (USE_BACKEND_NATIVE)
  object_link_libraries(${T} native)
endif()

set(T "distrbasic")
add_object(${T} distrbasic.cpp)
object_link_libraries(${T} distrsolver utildistr use_backend)
